using EventCenter;
using Guide;
using Spine;
using Spine.Unity;
using System;
using System.Collections.Generic;
using UnityEngine;

public class LodingPanel: UIPanelBehaviour
{
    private const float m_allTime = 2.5f;

    private float m_timer;

    private bool m_canClose;
    private bool m_startTime;

    private SkeletonGraphic m_skeletonGraphic;
    private Animator m_animator;

    public Action action;
    public Action HidePanelAction;
    public Action PlayOpenAnimAction;

    protected override void OnShow(List<object> parmers = null)
    {
        m_animator = transform.Find("Loading").GetComponent<Animator>();
        m_animator.gameObject.SetActive(false);
        m_skeletonGraphic = transform.Find("MuBu/Bg").GetComponent<SkeletonGraphic>();
    }

    protected override void OnHide()
    {
        if(HidePanelAction != null)
        {
            HidePanelAction();
        }

        m_skeletonGraphic.AnimationState.ClearCompleteStateEvent();
        action = null;
        PlayOpenAnimAction = null;
        m_timer = 0;
        m_canClose = false;
        m_startTime = false;
        GuideStep step = ControllerCenter.Instance.GuideController.GetCurrentStep();
        if(step == GuideStep.None)
        {
            EventManager.Instance.TriggerEvent(EventSystemType.UI,EventTypeNameDefine.ShowMainPanelBtn);
        }
    }

    public void PlayCloseAnim()
    {
        m_skeletonGraphic.AnimationState.ClearCompleteStateEvent();
        m_skeletonGraphic.AnimationState.Complete += PlayCloseComplete;
        m_skeletonGraphic.AnimationState.SetAnimation(0,"Close",false);
    }

    private void PlayCloseComplete(TrackEntry trackEntry)
    {
        m_skeletonGraphic.AnimationState.ClearCompleteStateEvent();
        m_startTime = true;
        m_animator.gameObject.SetActive(true);
        m_animator.Play("Loading");
        if(action != null)
        {
            action();
        }
    }

    private void PlayOpenComplete(TrackEntry trackEntry)
    {
        m_skeletonGraphic.AnimationState.ClearCompleteStateEvent();
        UIPanelManager.Instance.Hide<LodingPanel>(false);
    }

    private void Update()
    {
        if(!m_startTime)
        {
            return;
        }

        if(m_timer < m_allTime)
        {
            m_timer += Time.deltaTime;
        }
        else
        {
            if(m_canClose)
            {
                ClosePanel();
                m_canClose = false;
            }
        }
    }

    public void Close()
    {
        if(m_timer >= m_allTime)
        {
            ClosePanel();
        }
        else
        {
            m_canClose = true;
        }
    }

    private void ClosePanel()
    {
        // Debug.Log("播放打开动画");
        m_animator.gameObject.SetActive(false);
        m_skeletonGraphic.AnimationState.ClearCompleteStateEvent();
        //Debug.Log("播放打开动画");
        m_skeletonGraphic.AnimationState.SetAnimation(0,"Open",false);
        m_skeletonGraphic.AnimationState.Complete += PlayOpenComplete;
        if(PlayOpenAnimAction != null)
        {
            PlayOpenAnimAction();
        }
    }
}
