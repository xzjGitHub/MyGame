using GameEventDispose;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class UIExploreBigMap : MonoBehaviour
{

    /// <summary>
    /// 打开显示
    /// </summary>
    public void OpenUI(bool isNeedSelect = false)
    {
        LogHelper_MC.LogError("选择房间");
        //todo 大地图未做
        return;
        EventDispatcher.Instance.ExploreEvent.DispatchEvent(EventId.ExploreEvent, ExploreEventType.WPStartReady, (object)true);

        if (!_isFirst)
        {
            GetObj();
            UpdateWPClick();
            _previousRoomID = ExploreSystem.Instance.PreviousRoomID();
            _roomID = ExploreSystem.Instance.NowRoomID();
            //LoadMapRes();
        }
        //
        UpdateProgressPoint();
        //
        gameObject.SetActive(isNeedSelect);
        this._isNeedSelect = isNeedSelect;
        if (!isNeedSelect)
        {
            EventDispatcher.Instance.ExploreEvent.DispatchEvent(EventId.ExploreEvent, ExploreEventType.WPStartReady, (object)true);
        }
    }

    /// <summary>
    /// 更新进度点
    /// </summary>
    /// <param name="wpID">路点id</param>
    /// <param name="progressIndex">房间的进度为0</param>
    public void UpdateProgressPoint()
    {
        if (ExploreSystem.Instance.NowWPAttribute.IsRoom)
        {
            _markerTrans.localPosition = _roomButtons[ExploreSystem.Instance.NowWaypointId].transform.localPosition;
        }
        else
        {
            Vector3 pos0 = _roomButtons[_previousRoomID].transform.localPosition;
            Vector3 pos1 = _roomButtons[_roomID].transform.localPosition;
            _markerTrans.localPosition = pos0 + (pos1 - pos0) * ExploreSystem.Instance.VisitProgress;
        }
        UpdateButtonShow();
        gameObject.SetActive(true);
    }

    /// <summary>
    /// 更新按钮显示
    /// </summary>
    private void UpdateButtonShow()
    {
        List<int> list = ExploreSystem.Instance.GetAllUsableRoomIDs();
        foreach (KeyValuePair<int, Button> item in _roomButtons)
        {
            item.Value.interactable = list.Contains(item.Key);
        }
    }

    /// <summary>
    /// 点击了背景
    /// </summary>
    private void OnClickButton()
    {
        if (_isNeedSelect)
        {
            return;
        }

        gameObject.SetActive(false);
    }

    /// <summary>
    /// 点击路点
    /// </summary>
    /// <param name="WPId"></param>
    private void OnClickWP(int WPId)
    {
        if (!ExploreSystem.Instance.SelectRoom(WPId))
        {
            return;
        }
        _previousRoomID = _roomID;
        _roomID = WPId;
        //路点开始
        EventDispatcher.Instance.ExploreEvent.DispatchEvent(EventId.ExploreEvent, ExploreEventType.WPSelect, (object)WPId);
        gameObject.SetActive(false);
        _isNeedSelect = false;
    }

    /// <summary>
    /// 点击传送门
    /// </summary>
    /// <param name="WPID"></param>
    private void OnClickGate(int WPID)
    {

    }

    private void UpdateWPClick()
    {
        foreach (Transform item in _roomTrans)
        {
            int wpID = int.Parse(item.name);

            _roomButtons.Add(wpID, item.GetComponent<Button>());

            _roomButtons[wpID].onClick.AddListener(delegate { OnClickWP(wpID); });
        }
    }

    /// <summary>
    /// 加载地图资源
    /// </summary>
    private void LoadMapRes()
    {

    }

    private void GetObj()
    {
        if (_isFirst)
        {
            return;
        }

        _button = transform.GetComponent<Button>();
        _pathImage = transform.Find("PathIcon").GetComponent<Image>();
        _roomTrans = transform.Find("Room");
        _markerTrans = transform.Find("Marker/Marker");
        //
        _button.onClick.AddListener(OnClickButton);
        //
        _isFirst = true;
    }

    //
    private Button _button;
    private Image _pathImage;
    private Transform _roomTrans;
    private Transform _markerTrans;
    //
    private Dictionary<int, Button> _roomButtons = new Dictionary<int, Button>();
    private bool _isFirst;
    private readonly bool _isCheckGate = true;
    private bool _isNeedSelect;
    private int _roomID;
    private int _previousRoomID;
}
