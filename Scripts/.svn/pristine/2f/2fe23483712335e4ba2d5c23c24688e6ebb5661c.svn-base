using System;
using UnityEngine;
using UnityEngine.UI;

public class DiaLogPanel: UIPanelBehaviour
{
    private GameObject m_info1;
    private GameObject m_info2;

    private Text m_desDia;
    private Text m_des;

    private Text m_dia;
    private TypeWriterText m_diaInfo;

    [HideInInspector]
    public Action CloseCallBack;

    private bool m_hasClick;

    protected override void OnAwake()
    {
        m_info1 = transform.Find("Info1").gameObject;
        m_info2 = transform.Find("Info2").gameObject;

        m_des = transform.Find("Info1/Image/Des").GetComponent<Text>();
        m_desDia = transform.Find("Info1/Head/Text").GetComponent<Text>();

        m_diaInfo = transform.Find("Info2/Des").GetComponent<TypeWriterText>();
        m_diaInfo.InitComponent();
        m_dia = transform.Find("Info2/Head/Text").GetComponent<Text>();

        Utility.AddButtonListener(transform.Find("Btn"),CloseAction);

        UpdateShow(true);

        InitTextInfo();
    }

    private void InitTextInfo()
    {
        Text_template textTem = Text_templateConfig.GetText_config(1002);
        m_des.text = textTem.text;
        textTem = Text_templateConfig.GetText_config(1003);
        m_desDia.text = textTem.text;

        textTem = Text_templateConfig.GetText_config(1004);
        m_diaInfo.InitMsg(textTem.text);
        textTem = Text_templateConfig.GetText_config(1005);
        m_dia.text = textTem.text;
    }

    private void CloseAction()
    {
        if(m_info1.activeSelf && ScriptSystem.Instance.ScriptPhase == ScriptPhase.Front)
        {
            UpdateShow(false);
            m_diaInfo.StartWrite();
            return;
        }

        if(m_hasClick)
            return;

        CloseCallBack();
        UIPanelManager.Instance.Hide<DiaLogPanel>();
        m_hasClick = true;
    }


    private void UpdateShow(bool showInfo1)
    {
        m_info1.SetActive(showInfo1);
        m_info2.SetActive(!showInfo1);
    }
}

